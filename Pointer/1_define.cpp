/**
 * File : 1_define.cpp
 * Author: 骑着蜗牛ひ追导弹'
 * Date: 2022/9/13 
 */
# include <iostream>

using namespace std;

/**
   1.指针的基本概念
     指针的作用： 可以通过指针间接访问内存
		* 内存编号是从0开始记录的，一般用十六进制数字表示
		* 可以利用指针变量保存地址

   2.指针变量的定义和使用
      指针变量定义语法： 数据类型 * 变量名；
*/

int main(int argc, char **argv) {

    // 1、指针的定义
    int a = 10;   //定义整型变量a

    // 指针定义语法： 数据类型 * 变量名 ;
    int *p;

    // 指针变量赋值
    p = &a; // 指针指向变量a的地址
    cout << "a的地址为：" << &a << endl; // 打印数据a的地址
    cout << "p:" << p << endl;  // 打印指针变量p

    // 2、指针的使用
    // 通过*操作指针变量指向的内存(数据) - 解引用
    *p = 1000; // 因为p指向a的地址，所以*p就代表a（值），重新赋值
    cout << "*p = " << *p << endl;
    cout << "a = " << a << endl;

    /**
	  指针变量和普通变量的区别:

		* 普通变量存放的是数据,指针变量存放的是地址
		* 指针变量可以通过" * "操作符，操作指针变量指向的内存空间，这个过程称为解引用

		> 总结1：我们可以通过 & 符号 获取变量的地址
		> 总结2：利用指针可以记录地址
		> 总结3：对指针变量解引用，可以操作指针指向的内存
	*/

    // 指针也是种数据类型，那么这种数据类型占用多少内存空间？
    int b = 10;

    int *q = &b; //指针指向数据a的地址

    cout << *q << endl; //* 解引用
    cout << "指针占用的内存空间大小：" << sizeof(q) << endl;
    cout << "指针占用的内存空间大小：" << sizeof(int *) << endl;

    return 0;
}